{"ast":null,"code":"var _jsxFileName = \"E:\\\\University\\\\ERP\\\\React_Tailwind_EcommerceAdmin_Dashboard\\\\src\\\\context\\\\SidebarContext.js\";\nimport React, { useState, useMemo } from \"react\"; // create context\n\nexport const SidebarContext = React.createContext();\nexport const SidebarProvider = _ref => {\n  let {\n    children\n  } = _ref;\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\n\n  function toggleSidebar() {\n    setIsSidebarOpen(!isSidebarOpen);\n  }\n\n  function closeSidebar() {\n    setIsSidebarOpen(false);\n  }\n\n  const value = useMemo(() => ({\n    isSidebarOpen,\n    toggleSidebar,\n    closeSidebar\n  }), [isSidebarOpen]);\n  return /*#__PURE__*/React.createElement(SidebarContext.Provider, {\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, children);\n};","map":{"version":3,"sources":["E:/University/ERP/React_Tailwind_EcommerceAdmin_Dashboard/src/context/SidebarContext.js"],"names":["React","useState","useMemo","SidebarContext","createContext","SidebarProvider","children","isSidebarOpen","setIsSidebarOpen","toggleSidebar","closeSidebar","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,OAA1B,QAAyC,OAAzC,C,CAEA;;AACA,OAAO,MAAMC,cAAc,GAAGH,KAAK,CAACI,aAAN,EAAvB;AAEP,OAAO,MAAMC,eAAe,GAAG,QAAkB;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAC/C,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCP,QAAQ,CAAC,KAAD,CAAlD;;AAEA,WAASQ,aAAT,GAAyB;AACvBD,IAAAA,gBAAgB,CAAC,CAACD,aAAF,CAAhB;AACD;;AAED,WAASG,YAAT,GAAwB;AACtBF,IAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACD;;AAED,QAAMG,KAAK,GAAGT,OAAO,CACnB,OAAO;AACLK,IAAAA,aADK;AAELE,IAAAA,aAFK;AAGLC,IAAAA;AAHK,GAAP,CADmB,EAMnB,CAACH,aAAD,CANmB,CAArB;AASA,sBACE,oBAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAEI,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwCL,QAAxC,CADF;AAGD,CAvBM","sourcesContent":["import React, { useState, useMemo } from \"react\";\r\n\r\n// create context\r\nexport const SidebarContext = React.createContext();\r\n\r\nexport const SidebarProvider = ({ children }) => {\r\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\r\n\r\n  function toggleSidebar() {\r\n    setIsSidebarOpen(!isSidebarOpen);\r\n  }\r\n\r\n  function closeSidebar() {\r\n    setIsSidebarOpen(false);\r\n  }\r\n\r\n  const value = useMemo(\r\n    () => ({\r\n      isSidebarOpen,\r\n      toggleSidebar,\r\n      closeSidebar,\r\n    }),\r\n    [isSidebarOpen]\r\n  );\r\n\r\n  return (\r\n    <SidebarContext.Provider value={value}>{children}</SidebarContext.Provider>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}